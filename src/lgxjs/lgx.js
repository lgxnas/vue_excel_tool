//dxsjson格式
//[ { "乡镇名称": "安福镇", "监测断面名称": "安福镇安福村5社", "pH": "7.60", "总硬度 ": 250, "硫酸盐 ": 158, "氯化物 ": 46.2, "铁 ": "0.0045L", "锰 ": 0.0006, "铜 ": "0.009L", "锌 ": 0.001, "挥发酚 ": "0.0003L", "阴离子表面活性剂 ": 0.087, "耗氧量": 2.5, "硝酸盐 ": 11.4, "亚硝酸盐 ": "0.016L", "氨氮 ": 0.053, "氟化物 ": 0.281, "氰化物 ": "0.002L", "汞 ": "0.00004L", "砷 ": "0.0003L", "硒 ": "0.0004L", "镉 ": "0.004L", "六价铬 ": "0.004L", "铅 ": "0.008L", "总大肠菌群 ": "＜2" }, { "乡镇名称": "白家乡", "监测断面名称": "白家乡1村7社", "pH": 7.71, "总硬度 ": 214, "硫酸盐 ": 78.4, "氯化物 ": 16.5, "铁 ": "0.0045L", "锰 ": 0.0766, "铜 ": "0.009L", "锌 ": "0.001L", "挥发酚 ": "0.0003L", "阴离子表面活性剂 ": 0.053, "耗氧量": "2.0", "硝酸盐 ": 1.18, "亚硝酸盐 ": "0.016L", "氨氮 ": 0.058, "氟化物 ": 0.354, "氰化物 ": "0.002L", "汞 ": 0.0002, "砷 ": 0.0051, "硒 ": "0.0004L", "镉 ": "0.004L", "六价铬 ": 0.005, "铅 ": "0.008L", "总大肠菌群 ": 2 }, { "乡镇名称": "大观乡", "监测断面名称": "大观乡灵吉苑社区", "pH": 7.47, "总硬度 ": 222, "硫酸盐 ": 83.4, "氯化物 ": 13.6, "铁 ": "0.0045L", "锰 ": 0.0012, "铜 ": "0.009L", "锌 ": "0.001L", "挥发酚 ": 0.0007, "阴离子表面活性剂 ": "0.050", "耗氧量": 1.7, "硝酸盐 ": 1.11, "亚硝酸盐 ": "0.016L", "氨氮 ": 0.095, "氟化物 ": 0.25, "氰化物 ": "0.002L", "汞 ": 0.00004, "砷 ": 0.0011, "硒 ": "0.0004L", "镉 ": "0.004L", "六价铬 ": 0.005, "铅 ": "0.008L", "总大肠菌群 ": "＜2" }, { "乡镇名称": "大通镇", "监测断面名称": "大通镇黄莲嘴", "pH": 7.73, "总硬度 ": 193, "硫酸盐 ": 142, "氯化物 ": 11.9, "铁 ": "0.114", "锰 ": 0.0096, "铜 ": "0.009L", "锌 ": 0.001, "挥发酚 ": "0.0003L", "阴离子表面活性剂 ": "0.05L", "耗氧量": 4.1, "硝酸盐 ": 0.474, "亚硝酸盐 ": "0.016L", "氨氮 ": 0.078, "氟化物 ": 0.259, "氰化物 ": "0.002L", "汞 ": 0.00006, "砷 ": 0.0008, "硒 ": "0.0004L", "镉 ": "0.004L", "六价铬 ": 0.005, "铅 ": "0.008L", "总大肠菌群 ": "≥2400" } ]
//result格式
//[{add:"安福镇",name:"安福镇安福村5社",level:"Ⅳ",des:"耗氧量(Ⅳ,超标0.37倍);总大肠菌群超标(Ⅴ,超标799.00倍);"}]
//地下水2-4类标准值
const dxs = [{
        "总硬度 ": "300",
        "硫酸盐 ": "150",
        "氯化物 ": "150",
        "铁 ": "0.2",
        "锰 ": "0.05",
        "铜 ": "0.05",
        "锌 ": "0.5",
        "挥发酚 ": "0.001",
        "阴离子表面活性剂 ": "0.1",
        "耗氧量": "2",
        "硝酸盐 ": "5",
        "亚硝酸盐 ": "0.1",
        "氨氮 ": "0.1",
        "氟化物 ": "1",
        "氰化物 ": "0.01",
        "汞 ": "0.0001",
        "砷 ": "0.001",
        "硒 ": "0.01",
        "镉 ": "0.001",
        "六价铬 ": "0.01",
        "铅 ": "0.005",
        "总大肠菌群 ": "3"
    },
    {
        "总硬度 ": "450",
        "硫酸盐 ": "250",
        "氯化物 ": "250",
        "铁 ": "0.3",
        "锰 ": "0.1",
        "铜 ": "1",
        "锌 ": "1",
        "挥发酚 ": "0.002",
        "阴离子表面活性剂 ": "0.3",
        "耗氧量": "3",
        "硝酸盐 ": "20",
        "亚硝酸盐 ": "1",
        "氨氮 ": "0.5",
        "氟化物 ": "1",
        "氰化物 ": "0.05",
        "汞 ": "0.001",
        "砷 ": "0.01",
        "硒 ": "0.01",
        "镉 ": "0.005",
        "六价铬 ": "0.05",
        "铅 ": "0.01",
        "总大肠菌群 ": "3"
    },
    {
        "总硬度 ": "650",
        "硫酸盐 ": "350",
        "氯化物 ": "350",
        "铁 ": "2",
        "锰 ": "1.5",
        "铜 ": "1.5",
        "锌 ": "5",
        "挥发酚 ": "0.01",
        "阴离子表面活性剂 ": "0.3",
        "耗氧量": "10",
        "硝酸盐 ": "30",
        "亚硝酸盐 ": "4.8",
        "氨氮 ": "1.5",
        "氟化物 ": "2",
        "氰化物 ": "0.1",
        "汞 ": "0.002",
        "砷 ": "0.05",
        "硒 ": "0.1",
        "镉 ": "0.01",
        "六价铬 ": "0.1",
        "铅 ": "0.1",
        "总大肠菌群 ": "100"
    }
]; //2 3 4 类
const dbs = [];

function analyse_value(key, value) { //value v3 number float 返回超标倍数
    let v3 = dxs[1][key];
    // console.log(key,value,v3)
    let bs = 0;
    let level = "";
    if (value > v3) {
        let tmpbs = (value - v3) / v3;
        bs = tmpbs.toFixed(2);
        console.log(key, value, v3, bs)
        if (value > dxs[2][key]) {
            level = "Ⅴ";
        } else {
            level = "Ⅳ";
        }
    }
    return {
        lva: level,
        bs: bs
    };
}

function analyse_obj(obj) {
    let arrKey = [];
    let strDes = "";
    let lvobj = "";
    for (let key in obj) {
        arrKey.push(key);
    }
    for (let i = 3; i < arrKey.length; i++) { //
        let v = obj[arrKey[i]]; //测量值 字符串和数字
        let va = 0;
        if (typeof (v) == "string") { //测量值 
            va = parseFloat(v.replace(/[L|\<|≥|\s]/, "")); //转float
            // console.log(obj[arrKey[i]],va)
        } else {
            va = v;
        }
        let objV = analyse_value(arrKey[i], va);
        if (objV.bs > 0) {
            strDes = strDes + arrKey[i] + "(" + objV.lva + ",超标" + objV.bs + "倍);"
        }
    }
    // console.log(strDes)
    if (strDes.length > 0) {
        if (strDes.indexOf("Ⅴ") != -1) { //找到5类水标志
            lvobj = "Ⅴ";
        } else {
            lvobj = "Ⅳ";
        }
        return {
            add: obj[arrKey[0]],
            name: obj[arrKey[1]],
            level: lvobj,
            des: strDes
        }
    }
};

function analyse_dxs(dxsjson) {
    let result = [];
    for (let i = 0; i < dxsjson.length; i++) {
        let obj = analyse_obj(dxsjson[i]);
        // console.log(obj)
        if (!obj) {
            // console.log(obj);
        } else {
            result.push(obj);
        }
    }
    return result;
};
export {
    analyse_dxs
};